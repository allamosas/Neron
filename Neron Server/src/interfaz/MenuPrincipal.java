/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.help.HelpSetException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import source.Configuration;
import source.DragNDropPane;
import source.InstanceManager;
import source.LookNFeel;
import source.TableManager;
import source.TrayNotification;

/**
 *
 * @author Andres
 */
public class MenuPrincipal extends javax.swing.JFrame {

    TrayNotification tray;
    TableManager tm;
    DragNDropPane dndp = new DragNDropPane();
    boolean cambiosSinGuardar = false;

    /**
     * Creates new form Principal
     */
    public MenuPrincipal() {
    }

    public MenuPrincipal(String pass) {
        initComponents();
        tm = new TableManager((DefaultTableModel) table.getModel(), this);
        dndp.setTableManager(tm);
        dndp.setPrincipal(this);
        tm.setPass(pass);
        tm.cargarTabla();
        ajustarWidth();
        LookNFeel.setIcons(this);
        javaHelp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        btnOpciones = new javax.swing.JButton();
        jPanel1 = dndp;
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(ResourceBundle.getBundle("messages.messages").getString("NERON"));
        setIconImages(null);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setMargin(new java.awt.Insets(0, 10, 0, 0));

        btnNuevo.setIcon(LookNFeel.getAdd());
        btnNuevo.setToolTipText(ResourceBundle.getBundle("messages.messages").getString("TOOLTIP_NUEVO"));
        btnNuevo.setFocusable(false);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevo);

        btnEliminar.setIcon(LookNFeel.getDelete());
        btnEliminar.setToolTipText(ResourceBundle.getBundle("messages.messages").getString("TOOLTIP_ELIMINAR"));
        btnEliminar.setFocusable(false);
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEliminar);

        btnGuardar.setIcon(LookNFeel.getSave());
        btnGuardar.setToolTipText(ResourceBundle.getBundle("messages.messages").getString("TOOLTIP_GUARDAR"));
        btnGuardar.setFocusable(false);
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGuardar);

        jToolBar2.setFloatable(false);
        jToolBar2.setAlignmentX(1.0F);
        jToolBar2.setMargin(new java.awt.Insets(0, 1, 0, 0));
        jToolBar2.setPreferredSize(new java.awt.Dimension(23, 23));

        btnOpciones.setIcon(LookNFeel.getConfig());
        btnOpciones.setToolTipText(ResourceBundle.getBundle("messages.messages").getString("OPCIONES"));
        btnOpciones.setAlignmentX(0);
        btnOpciones.setFocusable(false);
        btnOpciones.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnOpciones.setMaximumSize(new java.awt.Dimension(40, 40));
        btnOpciones.setMinimumSize(new java.awt.Dimension(30, 30));
        btnOpciones.setPreferredSize(new java.awt.Dimension(40, 40));
        btnOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpcionesActionPerformed(evt);
            }
        });
        jToolBar2.add(btnOpciones);

        table.setAutoCreateRowSorter(true);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NÂº", "Ruta", "Nombre", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table.setDragEnabled(true);
        table.setFocusable(false);
        table.setName(""); // NOI18N
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        JFileChooser file = new JFileChooser();
        file.setMultiSelectionEnabled(true);
        file.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int op = file.showOpenDialog(this);
        if (file.getSelectedFiles().length != 0 && op == JFileChooser.APPROVE_OPTION) {
            try {
                if (tm.insertarFila(file.getSelectedFiles())) {
                    cambio();
                }
            } catch (NullPointerException ex) {
            source.Logger.error("MenuPrincipal", "btnNuevoActionPerformed()", 
                    "Fichero seleccionado nulo", ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpcionesActionPerformed
        Opciones opciones = new Opciones();
        opciones.setTableManager(tm);
        if (cambiosSinGuardar) {
            switch (JOptionPane.showConfirmDialog(
                    this, ResourceBundle.getBundle("messages.messages")
                            .getString("GUARDA_ANTES"),
                    ResourceBundle.getBundle("messages.messages")
                            .getString("NERON"),
                    JOptionPane.YES_NO_CANCEL_OPTION)) {
                case 0:
                    guardar();
                    opciones.setVisible(true);
                    break;
                case 1:
                    tm.cargarTabla();
                    guardar();
                    opciones.setVisible(true);
                    break;
            }
        } else {
            opciones.setVisible(true);
        }
    }//GEN-LAST:event_btnOpcionesActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (tm.isAnyRowSelected(table)) {
            try {
                List<Integer> ids = new ArrayList<>();
                for (int i : table.getSelectedRows()) {
                    ids.add(i);
                }
                tm.eliminarFilas(ids);
                cambio();
            } catch (NullPointerException ex) {
            source.Logger.error("MenuPrincipal", "btnNuevoActionPerformed()", 
                    "Fichero seleccionado nulo", ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    ResourceBundle.getBundle("messages.messages")
                            .getString("NO_SELECCIONADO"),
                    ResourceBundle.getBundle("messages.messages")
                            .getString("NERON"), 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (cambiosSinGuardar) {
            switch (JOptionPane.showConfirmDialog(
                    this, ResourceBundle.getBundle("messages.messages")
                            .getString("CIERRE_SIN_GUARDAR"),
                    ResourceBundle.getBundle("messages.messages")
                            .getString("NERON"),
                    JOptionPane.YES_NO_CANCEL_OPTION)) {
                case 0:
                    guardar();
                    break;
                case 1:
                    tm.cargarTabla();
                    guardar();
                    break;
            }
        }        
        if(Configuration.getPropCierre()[0]){
            this.setVisible(false);
        } else {
            new InstanceManager().cerrarApp();            
        }     
    }//GEN-LAST:event_formWindowClosing

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
        btnEliminar.setIcon(LookNFeel.getDeleteFocus());
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        btnEliminar.setIcon(LookNFeel.getDelete());
    }//GEN-LAST:event_btnEliminarMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MenuPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnGuardar;
    public javax.swing.JButton btnNuevo;
    public javax.swing.JButton btnOpciones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void ajustarWidth() {
        TableColumnModel columnModel = table.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(30);
        columnModel.getColumn(0).setHeaderValue(ResourceBundle
                .getBundle("messages.messages").getString("NUMERO"));
        columnModel.getColumn(1).setPreferredWidth(300);
        columnModel.getColumn(1).setHeaderValue(ResourceBundle
                .getBundle("messages.messages").getString("RUTA"));
        columnModel.getColumn(2).setPreferredWidth(100);
        columnModel.getColumn(2).setHeaderValue(ResourceBundle
                .getBundle("messages.messages").getString("NOMBRE"));
        columnModel.getColumn(3).setPreferredWidth(50);
        columnModel.getColumn(3).setHeaderValue(ResourceBundle
                .getBundle("messages.messages").getString("EXTENSION"));
        try {
            this.setIconImage(ImageIO.read(new File("media/square-icon.png")));
        } catch (IOException ex) {
            source.Logger.error("MenuPrincipal", "ajustarWidth()", 
                    "No se ha encontrado la imagen square-icon.png",
                    ex.getMessage());
        }
    }

    public void cambio() {
        cambiosSinGuardar = true;
        btnGuardar.setIcon(LookNFeel.getSave());
    }

    private void guardar() {
        tm.guardarTabla();
        cambiosSinGuardar = false;
        btnGuardar.setIcon(LookNFeel.getSaved());
    }

    public void setTray(TrayNotification tray) {
        this.tray = tray;
    }

    public TrayNotification getTray() {
        return tray;
    }

    private void javaHelp() {
        try {
            File fichero = new File(Configuration.getJavaHelp());
            URL hsURL = fichero.toURI().toURL();            
            HelpSet helpset = new HelpSet(getClass().getClassLoader(), hsURL);
            
            HelpBroker hb = helpset.createHelpBroker();
            hb.enableHelpKey(this.getContentPane(), "principal", helpset);

            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();            
            Point p = new Point((int)screenSize.getWidth()/4, (int)screenSize.getHeight()/4);
            hb.setLocation(p);
        } catch (MalformedURLException ex) {
            source.Logger.error("MenuPrincipal", "javaHelp()", 
                    "URL mal formada", ex.getMessage());
        } catch (HelpSetException ex) {
            source.Logger.error("MenuPrincipal", "javaHelp()", 
                    "Excepcion general", ex.getMessage());
        }
    }
}
